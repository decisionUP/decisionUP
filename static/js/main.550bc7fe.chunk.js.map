{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/services.jsx","components/testimonials.jsx","components/team.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ScrollBar","styled","img","Navigation","id","className","type","data-toggle","data-target","href","src","alt","Header","props","data","title","paragraph","Features","map","d","i","icon","text","About","paragraph2","Why","Why2","Services","name","Testimonials","DivWidthSixty","div","DivWidthNinety","Team","execTeam","job","team","Contact","email","twitter","linkedin","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","ExecTeam","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.550bc7fe.chunk.js","sourcesContent":["import styled from \"styled-components\";\nconst ScrollBar = styled.img`\n  height: 60px;\n  padding: 0px;\n  margin-top: -20px;\n`;\nexport const Navigation = () => {\n  return (\n    <nav id=\"menu\" className=\"navbar navbar-default navbar-fixed-top\">\n      <div className=\"container\">\n        <div className=\"navbar-header\">\n          <button\n            type=\"button\"\n            className=\"navbar-toggle collapsed\"\n            data-toggle=\"collapse\"\n            data-target=\"#bs-example-navbar-collapse-1\"\n          >\n            {\" \"}\n            <span className=\"sr-only\">Toggle navigation</span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n            <span className=\"icon-bar\"></span>{\" \"}\n          </button>\n          <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\n            <ScrollBar\n              src=\"img/dh_logo_full.png\"\n              alt=\"Decision Hub Logo\"\n            ></ScrollBar>\n          </a>{\" \"}\n        </div>\n\n        <div\n          className=\"collapse navbar-collapse\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li>\n              <a href=\"#features\" className=\"page-scroll\">\n                Features\n              </a>\n            </li>\n            <li>\n              <a href=\"#about\" className=\"page-scroll\">\n                About\n              </a>\n            </li>\n            <li>\n              <a href=\"#services\" className=\"page-scroll\">\n                Services\n              </a>\n            </li>\n            <li>\n              <a href=\"#testimonials\" className=\"page-scroll\">\n                Testimonials\n              </a>\n            </li>\n            <li>\n              <a href=\"#team\" className=\"page-scroll\">\n                Team\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const Header = (props) => {\n  return (\n    <header id=\"header\">\n      <div className=\"intro\">\n        <div className=\"overlay\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 col-md-offset-2 intro-text\">\n                <h1>\n                  {props.data ? props.data.title : \"Loading\"}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : \"Loading\"}</p>\n                <a\n                  href=\"#features\"\n                  className=\"btn btn-custom btn-lg page-scroll\"\n                >\n                  Learn More\n                </a>{\" \"}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","export const Features = (props) => {\n  return (\n    <div id=\"features\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"col-md-10 col-md-offset-1 section-title\">\n          <h2>Features</h2>\n        </div>\n        <div className=\"row\">\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className=\"col-xs-6 col-md-3\">\n                  {\" \"}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : \"Loading...\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img\n              src=\"img/about.jpg\"\n              className=\"img-responsive\"\n              alt=\"About\"\n            />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>About Us</h2>\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n              <p>{props.data ? props.data.paragraph2 : \"loading...\"}</p>\n              <h3>Why Choose Us?</h3>\n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Services = (props) => {\n  return (\n    <div id=\"services\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Our Services</h2>\n          <p>Find out more about the core features of DecisionHub.</p>\n        </div>\n        <div className=\"row\">\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className=\"col-md-4\">\n                  {\" \"}\n                  <i className={d.icon}></i>\n                  <div className=\"service-desc\">\n                    <h3>{d.name}</h3>\n                    <p>{d.text}</p>\n                  </div>\n                </div>\n              ))\n            : \"loading\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Testimonials = (props) => {\n  return (\n    <div id=\"testimonials\">\n      <div className=\"container\">\n        <div className=\"section-title text-center\">\n          <h2>What our clients say</h2>\n        </div>\n        <div className=\"row\">\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className=\"col-md-6\">\n                  <div className=\"testimonial\">\n                    <div className=\"testimonial-image\">\n                      {\" \"}\n                      <img src={d.img} alt=\"Testimonial headshot\" />{\" \"}\n                    </div>\n                    <div className=\"testimonial-content\">\n                      <p>\n                        {'\"'}\n                        {d.text}\n                        {'\"'}\n                      </p>\n                      <div className=\"testimonial-meta\"> - {d.name} </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : \"loading\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\nconst DivWidthSixty = styled.div`\n  width: 60%;\n`;\nconst DivWidthNinety = styled.div`\n  width: 90%;\n`;\nexport const Team = (props) => {\n  return (\n    <div id=\"team\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"col-md-8 col-md-offset-2 section-title\">\n          <h2>Meet the Team</h2>\n          <p>\n            Interested to learn more about the team behind DecisionHub? Find out\n            here.\n          </p>\n        </div>\n        <DivWidthSixty className=\"container\" id=\"row\">\n          {props.execTeam\n            ? props.execTeam.map((d, i) => (\n                <div key={`${d.name}-${i}`} className=\"col-sm-6 team\">\n                  <div className=\"thumbnail\">\n                    {\" \"}\n                    <img src={d.img} alt=\"Team Member\" className=\"team-img\" />\n                    <div className=\"caption\">\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : \"loading\"}\n        </DivWidthSixty>\n        <DivWidthNinety className=\"container\" id=\"row\">\n          {props.team\n            ? props.team.map((d, i) => (\n                <div key={`${d.name}-${i}`} className=\"col-sm-4 team\">\n                  <div className=\"thumbnail\">\n                    {\" \"}\n                    <img src={d.img} alt=\"Team Member\" className=\"team-img\" />\n                    <div className=\"caption\">\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : \"loading\"}\n        </DivWidthNinety>\n      </div>\n    </div>\n  );\n};\n","export const Contact = (props) => {\n  return (\n    <div>\n      <div id=\"footer\">\n        <div className=\"social\">\n          <ul>\n            <li>\n              <a href={props.data ? \"mailto:\" + props.data.email : \"/\"}>\n                <i className=\"fa fa-envelope\"></i>\n              </a>\n            </li>\n            <li>\n              <a href={props.data ? props.data.twitter : \"/\"}>\n                <i className=\"fa fa-twitter\"></i>\n              </a>\n            </li>\n            <li>\n              <a href={props.data ? props.data.linkedin : \"/\"}>\n                <i className=\"fa fa-linkedin\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"container text-center\">\n          <p>&copy; 2021 DecisionHub</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Features } from \"./components/features\";\nimport { About } from \"./components/about\";\nimport { Services } from \"./components/services\";\nimport { Testimonials } from \"./components/testimonials\";\nimport { Team } from \"./components/team\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      <About data={landingPageData.About} />\n      <Services data={landingPageData.Services} />\n      <Testimonials data={landingPageData.Testimonials} />\n      <Team execTeam={landingPageData.ExecTeam} team={landingPageData.Team} />\n      <Contact data={landingPageData.Contact} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}